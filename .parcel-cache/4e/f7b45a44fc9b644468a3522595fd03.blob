<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <link rel="stylesheet" href="/index.HASH_REF_0be2e8ca04cf9bdf6889879f2fffe3c6.css"><script async="" src="https://www.googletagmanager.com/gtag/js?id=UA-121799045-2"></script>
    <script>// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function(modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x) {
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function(id, exports) {
    modules[id] = [
      function(require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function() {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function() {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"4no7M":[function(require,module,exports) {
var HMR_HOST = null;
var HMR_PORT = 1234;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d751713988987e9331980363e24189ce";
module.bundle.HMR_BUNDLE_ID = "2d16148e9711ec8d40a431f2ab2ee0c5";
// @flow
/*global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE*/
/*::
import type {
HMRAsset,
HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
(string): mixed;
cache: {|[string]: ParcelModule|};
hotData: mixed;
Module: any;
parent: ?ParcelRequire;
isParcelRequire: true;
modules: {|[string]: [Function, {|[string]: string|}]|};
HMR_BUNDLE_ID: string;
root: ParcelRequire;
}
interface ParcelModule {
hot: {|
data: mixed,
accept(cb: (Function) => void): void,
dispose(cb: (mixed) => void): void,
// accept(deps: Array<string> | string, cb: (Function) => void): void,
// decline(): void,
_acceptCallbacks: Array<(Function) => void>,
_disposeCallbacks: Array<(mixed) => void>,
|};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
*/
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || (function () {}));
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = undefined;
}
module.bundle.Module = Module;
var checkedAssets, /*: {|[string]: boolean|}*/
acceptedAssets, /*: {|[string]: boolean|}*/
/*: {|[string]: boolean|}*/
assetsToAccept;
function getHostname() {
  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
  return HMR_PORT || location.port;
}
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = getHostname();
  var port = getPort();
  var protocol = HMR_SECURE || location.protocol == 'https:' && !(/localhost|127.0.0.1|0.0.0.0/).test(hostname) ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');
  // $FlowFixMe
  ws.onmessage = function (event) /*: {data: string, ...}*/
  {
    checkedAssets = {
      /*: {|[string]: boolean|}*/
    };
    acceptedAssets = {
      /*: {|[string]: boolean|}*/
    };
    assetsToAccept = [];
    var data = /*: HMRMessage*/
    JSON.parse(event.data);
    if (data.type === 'update') {
      // Remove error overlay if there is one
      removeErrorOverlay();
      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);
      // Handle HMR Update
      var handled = false;
      assets.forEach(asset => {
        var didAccept = asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
        if (didAccept) {
          handled = true;
        }
      });
      if (handled) {
        console.clear();
        assets.forEach(function (asset) {
          hmrApply(module.bundle.root, asset);
        });
        for (var i = 0; i < assetsToAccept.length; i++) {
          var id = assetsToAccept[i][1];
          if (!acceptedAssets[id]) {
            hmrAcceptRun(assetsToAccept[i][0], id);
          }
        }
      } else {
        window.location.reload();
      }
    }
    if (data.type === 'error') {
      // Log parcel errors to console
      for (let ansiDiagnostic of data.diagnostics.ansi) {
        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
        console.error('ðŸš¨ [parcel]: ' + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
      }
      // Render the fancy html overlay
      removeErrorOverlay();
      var overlay = createErrorOverlay(data.diagnostics.html);
      // $FlowFixMe
      document.body.appendChild(overlay);
    }
  };
  ws.onerror = function (e) {
    console.error(e.message);
  };
  ws.onclose = function (e) {
    if (undefined !== 'test') {
      console.warn('[parcel] ðŸš¨ Connection to the HMR server was lost');
    }
  };
}
function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);
  if (overlay) {
    overlay.remove();
    console.log('[parcel] âœ¨ Error resolved');
  }
}
function createErrorOverlay(diagnostics) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID;
  let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
  for (let diagnostic of diagnostics) {
    let stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;
    errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          ðŸš¨ ${diagnostic.message}
        </div>
        <pre>
          ${stack}
        </pre>
        <div>
          ${diagnostic.hints.map(hint => '<div>' + hint + '</div>').join('')}
        </div>
      </div>
    `;
  }
  errorHTML += '</div>';
  overlay.innerHTML = errorHTML;
  return overlay;
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]>*/
{
  var modules = bundle.modules;
  if (!modules) {
    return [];
  }
  var parents = [];
  var k, d, dep;
  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];
      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push([bundle, k]);
      }
    }
  }
  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }
  return parents;
}
function updateLink(link) {
  var newLink = link.cloneNode();
  newLink.onload = function () {
    if (link.parentNode !== null) {
      // $FlowFixMe
      link.parentNode.removeChild(link);
    }
  };
  newLink.setAttribute('href', // $FlowFixMe
  link.getAttribute('href').split('?')[0] + '?' + Date.now());
  // $FlowFixMe
  link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
  if (cssTimeout) {
    return;
  }
  cssTimeout = setTimeout(function () {
    var links = document.querySelectorAll('link[rel="stylesheet"]');
    for (var i = 0; i < links.length; i++) {
      // $FlowFixMe[incompatible-type]
      var href = /*: string*/
      links[i].getAttribute('href');
      var hostname = getHostname();
      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
      var absolute = (/^https?:\/\//i).test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;
      if (!absolute) {
        updateLink(links[i]);
      }
    }
    cssTimeout = null;
  }, 50);
}
function hmrApply(bundle, /*: ParcelRequire*/
asset) /*:  HMRAsset*/
{
  var modules = bundle.modules;
  if (!modules) {
    return;
  }
  if (asset.type === 'css') {
    reloadCSS();
    return;
  }
  let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
  if (deps) {
    var fn = new Function('require', 'module', 'exports', asset.output);
    modules[asset.id] = [fn, deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}
function hmrAcceptCheck(bundle, /*: ParcelRequire*/
id, /*: ParcelRequire*/
/*: string*/
depsByBundle) /*: ?{ [string]: { [string]: string } }*/
{
  var modules = bundle.modules;
  if (!modules) {
    return;
  }
  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
    // If we reached the root bundle without finding where the asset should go,
    // there's nothing to do. Mark as "accepted" so we don't reload the page.
    if (!bundle.parent) {
      return true;
    }
    return hmrAcceptCheck(bundle.parent, id, depsByBundle);
  }
  if (checkedAssets[id]) {
    return;
  }
  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);
  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }
  return getParents(module.bundle.root, id).some(function (v) {
    return hmrAcceptCheck(v[0], v[1], null);
  });
}
function hmrAcceptRun(bundle, /*: ParcelRequire*/
id) /*: string*/
{
  var cached = bundle.cache[id];
  bundle.hotData = {};
  if (cached && cached.hot) {
    cached.hot.data = bundle.hotData;
  }
  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }
  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];
  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      var assetsToAlsoAccept = cb(function () {
        return getParents(module.bundle.root, id);
      });
      if (assetsToAlsoAccept && assetsToAccept.length) {
        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
      }
    });
  }
  acceptedAssets[id] = true;
}

},{}],"2TDHQ":[function(require,module,exports) {
window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag('js', new Date());

      gtag('config', 'UA-121799045-2');
},{}]},["4no7M","2TDHQ"], "2TDHQ", "parcelRequirec903")

</script>
    <meta name="p:domain_verify" content="7db4679199f9ff5da00d2e2b5d2bb268">
    <meta charset="UTF-8">
    <meta name="yandex-verification" content="15c6a35a530189e4">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <meta name="description" content="Portfolio of Simo Ngquseka. UX Designer, Developer. Ninja at creating beautiful and awesome applications.">
    <meta name="keywords" content="simo ngquseka, swssr, portfolio, simo, ngquseka, ux designer, developer, south africa, web design, app designer, javascript developer,">

    <meta name="HandheldFriendly" content="true">
    <!-- Open Graph -->
    <meta property="og:title" content="Simo Ngquseka">
    <meta property="og:site_name" content="Simo Ngquseka">
    <meta property="og:url" content="https://www.swssr.co">
    <meta property="og:description" content="Portfolio of Simo Ngquseka. UX Designer, Developer. Ninja at creating beautiful and awesome applications.">
    <meta property="og:type" content="website">
    <meta property="og:image" content="https://res.cloudinary.com/swssr/image/upload/v1567047311/swssr/rsp5o05tyyzaw1glfqfl.png">

    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Simo Ngquseka">

    <link rel="apple-touch-icon" sizes="57x57" href="/apple-icon-57x57.HASH_REF_4ae19ae38b02003130488f5e2da9e2c8.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/apple-icon-60x60.HASH_REF_5b93cfdb871dbd074d826b22fa148137.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-icon-72x72.HASH_REF_482d8f0fb105ad90eeaf1ce67a53e9b3.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/apple-icon-76x76.HASH_REF_d46515ba8d1f61f1d282b7d1c425b200.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-icon-114x114.HASH_REF_717bdbc98e317739119220bebe17ead8.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/apple-icon-120x120.HASH_REF_52f90607af3e9f3343791a50834187cf.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-icon-144x144.HASH_REF_e39839178a9c0e6957394783c2f05899.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/apple-icon-152x152.HASH_REF_08f7aed01a36686f13645422d4610c4a.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-icon-180x180.HASH_REF_716cb917956722e4cbf287a9f45ac196.png">
    <link rel="icon" type="image/png" sizes="192x192" href="/android-icon-192x192.HASH_REF_7948acff5719918fc4622eb0c8fb4be9.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.HASH_REF_2f11a960de92355bd043ea842fa5a9f7.png">
    <link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.HASH_REF_a46d7537e74549c3e9ae2eb01252237d.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.HASH_REF_8a47ce9be863cf02fc22084a16921323.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="/ms-icon-144x144.HASH_REF_d60efb8e8764872eafc7ab7057fa3205.png">
    <meta name="theme-color" content="#ffffff">

    <link rel="manifest" href="/manifest.js">
    <title>Simo Ngquseka</title>
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@200;400;500;700&display=swap" rel="stylesheet">
    <!-- <link rel="stylesheet" prefetch href="Assets/fonts/fonts.css" /> -->
  </head>

  <body>
    <!-- <div class="wrapper"> -->
    <div class="loader flex">
      <h3 class="centered pulse">LOADING</h3>
    </div>
    <nav class="nav fixed fixed--bottom alpha">
      <span class="link btn--menu"> MENU </span>
      <a href="#" class="logo">
        <img src="/logo.HASH_REF_e200e500060d4ddbc71e5d65d11e47fe.png" alt="Simo Ngquseka logo">
      </a>
      <a id="linkShowResume" class="link"> RESUME </a>
    </nav>
    <div class="super-wrap">
      <header class="overlay overlay--intro">
        <canvas class="intro__bg"></canvas>
        <img class="img img--mg-overlay" src="https://res.cloudinary.com/swssr/image/upload/v1583929510/swssr/mcemm6dde9ddwino8iec.png" data-src="https://res.cloudinary.com/swssr/image/upload/v1583929510/swssr/mcemm6dde9ddwino8iec.png" alt="swss overlay">
        <div class="intro__body">
          <h1 class="head">Hi! I'm Simo.</h1>
          <p class="body__text">
            Developer & UX/UI Designer with a passion for creating beautiful and
            awesome applications.
          </p>
        </div>
        <a href="#header" class="scroll">
          <span>DON'T CARE</span>
          <span class="glitch">SCROLL DOWN</span>
        </a>
      </header>
      <div class="target"></div>
      <main class="main" role="main">
        <header id="header" class="header">
          <div class="mobile-only">
            <div class="hero hero--mobile">
              <h1 class="head">I'm Simo.</h1>
              <p class="body__text body__text--head">
                I look at a screen for a living. If you're here. You probably
                care.
              </p>
              <a href="#intro" class="scroll">
                <span>SCROLL DOWN</span>
              </a>
            </div>
          </div>
        </header>
        <section id="intro" class="container container--intro">
          <div class="sect-head">
            <h6 class="prehead">INTRO</h6>
            <h1>WHO AM I</h1>
            <div class="subhead">why you should care</div>
          </div>
          <div class="sect-main card sect-main--alt">
            <div class="inner card__inner flex flex--col">
              <h1 class="head">Creative Developer</h1>
              <p class="body__text">
                I'm a Developer, UX/UI future ninja, people and tech lover. In
                love yet?
              </p>
              <button id="btnShowResume" class="btn btn--outline with-line">
                <span>RESUME</span>
              </button>
            </div>
            <!-- add photo that illustrate and summarize what you do -->
            <img title="why do you care how I look?" src="/loader.HASH_REF_ee9a4b077059086ff83810be314da2b7.gif" alt="picture of simo ngquseka" data-src="https://res.cloudinary.com/swssr/image/upload/v1567223894/swssr/nozjgursdtbrqvizpknm.jpg" class="img img--preview">
          </div>
        </section>
        <section id="work" class="container">
          <div class="sect-head">
            <h6 class="prehead">PROJECTS</h6>
            <h1>MY WORK</h1>
            <div class="subhead">some of the work I've done</div>
          </div>
          <div class="sect-main">
            <div class="card preview">
              <!-- <canvas id="proj-preview" class="img img--preview preview--lg"></canvas> -->
              <div class="tags">
                <div class="tags__head">Used</div>
                <span class="tags__item"></span>
                <span class="tags__item"></span>
                <span class="tags__item"></span>
                <span class="tags__item"></span>
              </div>

              <img src="/loader.HASH_REF_ee9a4b077059086ff83810be314da2b7.gif" id="proj-preview" class="img img--preview preview--lg">
            </div>
            <ul class="inner list list--projects">
              <li class="list__item list__item--active">
                <h2 class="item__name">BLACKCHILD FAIRCHILD</h2>
                <div class="item__subtext">
                  Non profit organisation website and blog
                </div>
                <a href="https://behance.net/swssr" class="link link--ext with-line" target="_blank" rel="noopener">VIEW</a>
              </li>
              <li class="list__item">
                <h2 class="item__name">MERIT BRANDING</h2>
                <div class="item__subtext">Media company official website</div>
                <a href="https://meritbranding.co.za" class="link link--ext with-line" target="_blank" rel="noopener">VIEW</a>
              </li>
              <li class="list__item">
                <h2 class="item__name">TUMISONG.DJ</h2>
                <div class="item__subtext">
                  Official website for DJ Tumisong
                </div>
                <a href="https://tumi.now.sh" class="link link--ext with-line" target="_blank" rel="noopener">VIEW</a>
              </li>
              <li class="list__item">
                <h2 class="item__name">MpiloTech</h2>
                <div class="item__subtext">Software company landing page</div>
                <a href="https://www.behance.net/gallery/87868351/MpiloTech" class="link link--ext with-line" target="_blank" rel="noopener">VIEW</a>
              </li>
              <li class="list__item">
                <h2 class="item__name">FILR</h2>
                <div class="item__subtext">WebAPI content manager</div>
                <a href="https://www.behance.net/gallery/87867291/Filr" class="link link--ext with-line" target="_blank" rel="noopener">VIEW</a>
              </li>
            </ul>
          </div>
        </section>
        <section id="skills" class="container container--skills">
          <div class="sect-head">
            <h6 class="prehead">SUPERPOWERS</h6>
            <h1>MY SKILLS</h1>
            <div class="subhead">Things I'm good at</div>
          </div>
          <div class="sect-main">
            <div class="card card--skills">
              <div class="card__item card__body flex flex--col">
                <h2 class="head skills__head">
                  FLEXIBLE <br>
                  THROUGHOUT <br>
                  THE STACK.
                </h2>
                <p class="body__text">
                  I'm a <mark>Developer</mark> and an aspiring
                  <mark>UX/UI Designer</mark> with a solid academic background
                  in <mark>Software Engineering</mark>, working as a freelance
                  web designer and developer since 2018. <br>
                  My skills peek right
                  <span class="glyph glyph--arrow-right"></span>
                </p>
              </div>
              <div class="card__item skills">
                <a href="#0" class="skill with-line">
                  <img class="img skill__bg" src="/loader.HASH_REF_ee9a4b077059086ff83810be314da2b7.gif" data-src="https://res.cloudinary.com/swssr/image/upload/v1583929681/swssr/dzj0xupzojd0nkjzta1z.jpg" alt="front-end illustrated">
                  <h1 class="skill__name">DEVELOPMENT</h1>
                </a>
                <a href="#0" class="skill with-line">
                  <img class="img skill__bg" src="/loader.HASH_REF_ee9a4b077059086ff83810be314da2b7.gif" data-src="https://res.cloudinary.com/swssr/image/upload/v1583929760/swssr/bxhwlqcnuhjqwf3n4cwx.jpg" alt="UX/UI illustrated">
                  <h1 class="skill__name">UX/UI DESIGN</h1>
                </a>
              </div>
            </div>
          </div>
        </section>
        <!-- TODO: Get actual reviews from your clients, then uncomment the fillowing lines -->
        <!-- <section id="reviews" class="container container--alt">
      <div class="sect-head">
        <h6 class="prehead">WHAT OTHER SAY?</h6>
        <h1>REVIEWS</h1>
        <div class="subhead">this could be you</div>
      </div>
      <div class="sect-main">
        <div id="reviews" class="reviews">
          <figure class="entry">
            <img src="/Assets/images/loader.gif" data-src="https://res.cloudinary.com/swssr/image/upload/v1567205278/swssr/ewnxlwvgbfjt9ugh0p1h.webp" alt="" class="img entry__img">
            <figcaption class="entry__comment">
              <blockquote class="body__text comment"> &OpenCurlyDoubleQuote;Has a personality of an owl... Very talented nontheless.&CloseCurlyDoubleQuote;
              </blockquote> 
              <span class="entry__owner with-line">Mr L Spambo.</span>
            </figcaption>
          </figure>
          <figure class="entry">
            <img src="/Assets/images/loader.gif" data-src="https://res.cloudinary.com/tumi/image/upload/v1560816677/images/webp/tumi.webp" alt="" class="img entry__img">
            <figcaption class="entry__comment">
              <blockquote class="body__text comment"> &OpenCurlyDoubleQuote; Nocturnal brain... is that a thing? Who cares.&CloseCurlyDoubleQuote;
              </blockquote> 
                <span class="entry__owner with-line">Tumisong DJ.</span>
            </figcaption>
          </figure>
          <figure class="entry">
            <img src="/Assets/images/loader.gif" data-src="https://res.cloudinary.com/tumi/image/upload/v1560816677/images/webp/nasa-45076-unsplash.webp" alt="" class="img entry__img">
            <figcaption class="entry__comment">
              <blockquote class="body__text comment">&OpenCurlyDoubleQuote;[Insert Something Inspiration] will not stroke your ego Simo.&CloseCurlyDoubleQuote;
              </blockquote> 
                <span class="entry__owner with-line">Dr Spaceman.</span>
            </figcaption>
          </figure>
          <figure class="entry">
            <img src="/Assets/images/loader.gif" data-src="https://res.cloudinary.com/tumi/image/upload/v1560816677/images/webp/igor-rand-1665699-unsplash.webp" alt="" class="img entry__img">
            <figcaption class="entry__comment">
              <blockquote class="body__text comment">&OpenCurlyDoubleQuote;Very innovative mind. I really admire his work!&CloseCurlyDoubleQuote;
              </blockquote> 
                <span class="entry__owner with-line">Mrs Singh.</span>
            </figcaption>
          </figure>
        </div>
      </div>
    </section> -->
        <section id="connect" class="container container--alt bg--translucent">
          <img src="/loader.HASH_REF_ee9a4b077059086ff83810be314da2b7.gif" data-src="https://res.cloudinary.com/tumi/image/upload/v1560816677/images/webp/img--bgwebp.webp" alt="simo standing on mountain" class="img img--bg">
          <div class="sect-head">
            <h6 class="prehead">like my work?</h6>
            <h1>IMPRESSED</h1>
            <div class="subhead">HIT ME UP HERE</div>
            <div class="sect-main social__links">
              <a target="_blank" rel="noopener" href="https://www.linkedin.com/in/swssr" class="card card--social">
                <img class="social__icon-img" src="/linkedin.HASH_REF_7ed13d232845056bc9398b3a31b0710f.svg" alt="social icon">
                <span class="card__more">linkedin/swssr</span>
              </a>
              <a target="_blank" href="mailto:simo@swssr.co" class="card card--social">
                <img class="social__icon-img" src="/at.HASH_REF_c77b9dee294d14bfc61bcdd40037fe82.svg" alt="social icon">
                <span class="card__more">simo@swssr.co</span>
              </a>
              <a target="_blank" rel="noopener" href="https://www.github.com/swssr" class="card card--social">
                <img class="social__icon-img" src="/github.HASH_REF_43f5910280d189d1f4b97390587075e0.svg" alt="social icon">
                <span class="card__more">@swssr</span>
              </a>
              <a target="_blank" rel="noopener" href="https://www.behance.net/swssr" class="card card--social">
                <img class="social__icon-img" src="/behance.HASH_REF_0f60aac8898ed40caae75da545a34f9b.svg" alt="social icon">
                <span class="card__more">@swssr</span>
              </a>
            </div>
          </div>
        </section>
      </main>
      <nav class="nav fixed fixed--top">
        <ul class="list links">
          <li class="link">
            <a target="_blank" rel="noopener" href="https://github.com/swssr" class="link with-line">GitHub</a>
          </li>
          <li class="link">
            <a target="_blank" rel="noopener" href="https://Behance.com/swssr" class="link with-line">Behance</a>
          </li>
        </ul>
        <a href="#0" class="link with-line link--primary">Resume</a>
      </nav>
    </div>
    <dialog class="overlay modal">
      <div class="modal__body">
        <h1 class="head modal__head">YOU WANT MY RESUME?</h1>
        <div class="subhead modal__subhead">TELL TALES SIGNS OF TRUE LOVE</div>
        <p class="body__text modal__body-text"></p>
        <form class="form modal__form">
          <label for="email" class="label">YOUR EMAIL ADDRESS</label>
          <div class="field">
            <input type="email" class="input field__input" inputmode="email" name="email" placeholder="HUMAN@SPACE.COM" id="email">
            <input type="submit" class="btn btn--submit" value="SUBMIT">
          </div>
        </form>
        <ul class="modal__list"></ul>
        <button class="btn btn--icon btn--close">
          <svg width="16.264" height="16.264" viewbox="0 0 16.264 16.264">
            <defs>
              <clipPath id="a">
                <rect width="16.264" height="16.264" fill="none"></rect>
              </clipPath>
            </defs>
            <g clip-path="url(#a)">
              <g transform="translate(14.849 0) rotate(45)" fill="none" stroke-width="1">
                <rect width="2" height="21" stroke="none"></rect>
                <rect x="0.5" y="0.5" width="1" height="20" fill="none"></rect>
              </g>
              <g transform="translate(0 1.414) rotate(-45)" fill="none" stroke-width="1">
                <rect width="2" height="21" stroke="none"></rect>
                <rect x="0.5" y="0.5" width="1" height="20" fill="none"></rect>
              </g>
            </g>
          </svg>
        </button>
      </div>
    </dialog>
    <div class="overlay overlay--menu">
      <div class="menu__inner">
        <div class="menu__links">
          <a class="link with-line" href="#intro">WHO AM I</a>
          <a class="link with-line" href="#work">WORK</a>
          <a class="link with-line" href="#connect">CONNECT</a>
          <a class="link with-line" href="https://github.com/swssr" target="_blank" rel="noopener">GitHub</a>
          <a class="link with-line" href="https://Behance.com/swssr" target="_blank" rel="noopener">Behance</a>
        </div>
      </div>
    </div>
    <!-- </div> -->
    <!-- <script src="https://unpkg.com/smooth-scrollbar@latest/dist/smooth-scrollbar.js"></script> -->
    <!-- <script>
  var elem = document.querySelector(".wrapper");
  var scrollbar = Scrollbar.init(elem,
  {
    speed: 0.9,
    damping:0.04
  });
  </script> -->
    <script>// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function(modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x) {
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function(id, exports) {
    modules[id] = [
      function(require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function() {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function() {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"77HXk":[function(require,module,exports) {
var HMR_HOST = null;
var HMR_PORT = 1234;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d751713988987e9331980363e24189ce";
module.bundle.HMR_BUNDLE_ID = "4615368f083986ade267500ee5e7ea70";
// @flow
/*global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE*/
/*::
import type {
HMRAsset,
HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
(string): mixed;
cache: {|[string]: ParcelModule|};
hotData: mixed;
Module: any;
parent: ?ParcelRequire;
isParcelRequire: true;
modules: {|[string]: [Function, {|[string]: string|}]|};
HMR_BUNDLE_ID: string;
root: ParcelRequire;
}
interface ParcelModule {
hot: {|
data: mixed,
accept(cb: (Function) => void): void,
dispose(cb: (mixed) => void): void,
// accept(deps: Array<string> | string, cb: (Function) => void): void,
// decline(): void,
_acceptCallbacks: Array<(Function) => void>,
_disposeCallbacks: Array<(mixed) => void>,
|};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
*/
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || (function () {}));
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = undefined;
}
module.bundle.Module = Module;
var checkedAssets, /*: {|[string]: boolean|}*/
acceptedAssets, /*: {|[string]: boolean|}*/
/*: {|[string]: boolean|}*/
assetsToAccept;
function getHostname() {
  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
  return HMR_PORT || location.port;
}
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = getHostname();
  var port = getPort();
  var protocol = HMR_SECURE || location.protocol == 'https:' && !(/localhost|127.0.0.1|0.0.0.0/).test(hostname) ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');
  // $FlowFixMe
  ws.onmessage = function (event) /*: {data: string, ...}*/
  {
    checkedAssets = {
      /*: {|[string]: boolean|}*/
    };
    acceptedAssets = {
      /*: {|[string]: boolean|}*/
    };
    assetsToAccept = [];
    var data = /*: HMRMessage*/
    JSON.parse(event.data);
    if (data.type === 'update') {
      // Remove error overlay if there is one
      removeErrorOverlay();
      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);
      // Handle HMR Update
      var handled = false;
      assets.forEach(asset => {
        var didAccept = asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
        if (didAccept) {
          handled = true;
        }
      });
      if (handled) {
        console.clear();
        assets.forEach(function (asset) {
          hmrApply(module.bundle.root, asset);
        });
        for (var i = 0; i < assetsToAccept.length; i++) {
          var id = assetsToAccept[i][1];
          if (!acceptedAssets[id]) {
            hmrAcceptRun(assetsToAccept[i][0], id);
          }
        }
      } else {
        window.location.reload();
      }
    }
    if (data.type === 'error') {
      // Log parcel errors to console
      for (let ansiDiagnostic of data.diagnostics.ansi) {
        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
        console.error('ðŸš¨ [parcel]: ' + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
      }
      // Render the fancy html overlay
      removeErrorOverlay();
      var overlay = createErrorOverlay(data.diagnostics.html);
      // $FlowFixMe
      document.body.appendChild(overlay);
    }
  };
  ws.onerror = function (e) {
    console.error(e.message);
  };
  ws.onclose = function (e) {
    if (undefined !== 'test') {
      console.warn('[parcel] ðŸš¨ Connection to the HMR server was lost');
    }
  };
}
function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);
  if (overlay) {
    overlay.remove();
    console.log('[parcel] âœ¨ Error resolved');
  }
}
function createErrorOverlay(diagnostics) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID;
  let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
  for (let diagnostic of diagnostics) {
    let stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;
    errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          ðŸš¨ ${diagnostic.message}
        </div>
        <pre>
          ${stack}
        </pre>
        <div>
          ${diagnostic.hints.map(hint => '<div>' + hint + '</div>').join('')}
        </div>
      </div>
    `;
  }
  errorHTML += '</div>';
  overlay.innerHTML = errorHTML;
  return overlay;
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]>*/
{
  var modules = bundle.modules;
  if (!modules) {
    return [];
  }
  var parents = [];
  var k, d, dep;
  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];
      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push([bundle, k]);
      }
    }
  }
  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }
  return parents;
}
function updateLink(link) {
  var newLink = link.cloneNode();
  newLink.onload = function () {
    if (link.parentNode !== null) {
      // $FlowFixMe
      link.parentNode.removeChild(link);
    }
  };
  newLink.setAttribute('href', // $FlowFixMe
  link.getAttribute('href').split('?')[0] + '?' + Date.now());
  // $FlowFixMe
  link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
  if (cssTimeout) {
    return;
  }
  cssTimeout = setTimeout(function () {
    var links = document.querySelectorAll('link[rel="stylesheet"]');
    for (var i = 0; i < links.length; i++) {
      // $FlowFixMe[incompatible-type]
      var href = /*: string*/
      links[i].getAttribute('href');
      var hostname = getHostname();
      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
      var absolute = (/^https?:\/\//i).test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;
      if (!absolute) {
        updateLink(links[i]);
      }
    }
    cssTimeout = null;
  }, 50);
}
function hmrApply(bundle, /*: ParcelRequire*/
asset) /*:  HMRAsset*/
{
  var modules = bundle.modules;
  if (!modules) {
    return;
  }
  if (asset.type === 'css') {
    reloadCSS();
    return;
  }
  let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
  if (deps) {
    var fn = new Function('require', 'module', 'exports', asset.output);
    modules[asset.id] = [fn, deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}
function hmrAcceptCheck(bundle, /*: ParcelRequire*/
id, /*: ParcelRequire*/
/*: string*/
depsByBundle) /*: ?{ [string]: { [string]: string } }*/
{
  var modules = bundle.modules;
  if (!modules) {
    return;
  }
  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
    // If we reached the root bundle without finding where the asset should go,
    // there's nothing to do. Mark as "accepted" so we don't reload the page.
    if (!bundle.parent) {
      return true;
    }
    return hmrAcceptCheck(bundle.parent, id, depsByBundle);
  }
  if (checkedAssets[id]) {
    return;
  }
  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);
  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }
  return getParents(module.bundle.root, id).some(function (v) {
    return hmrAcceptCheck(v[0], v[1], null);
  });
}
function hmrAcceptRun(bundle, /*: ParcelRequire*/
id) /*: string*/
{
  var cached = bundle.cache[id];
  bundle.hotData = {};
  if (cached && cached.hot) {
    cached.hot.data = bundle.hotData;
  }
  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }
  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];
  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      var assetsToAlsoAccept = cb(function () {
        return getParents(module.bundle.root, id);
      });
      if (assetsToAlsoAccept && assetsToAccept.length) {
        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
      }
    });
  }
  acceptedAssets[id] = true;
}

},{}],"4fZP4":[function(require,module,exports) {
if ('serviceWorker' in navigator) {
        // Use the window load event to keep the page load performant
        if (navigator.serviceWorker.controller) {
          console.log('active service worker found, no need to register');
        } else {
          // Register the service worker
          navigator.serviceWorker
            .register(new URL('./service-worker.js'), {
              scope: './',
            })
            .then(function (reg) {
              console.log(
                'Service worker has been registered for scope: ' + reg.scope
              );
            });
        }
      }
},{}]},["77HXk","4fZP4"], "4fZP4", "parcelRequirec903")

</script>
    <script>// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function(modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x) {
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function(id, exports) {
    modules[id] = [
      function(require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function() {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function() {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"5PEza":[function(require,module,exports) {
var HMR_HOST = null;
var HMR_PORT = 1234;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d751713988987e9331980363e24189ce";
module.bundle.HMR_BUNDLE_ID = "8cd7780bc913ffc1d502079627a4affc";
// @flow
/*global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE*/
/*::
import type {
HMRAsset,
HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
(string): mixed;
cache: {|[string]: ParcelModule|};
hotData: mixed;
Module: any;
parent: ?ParcelRequire;
isParcelRequire: true;
modules: {|[string]: [Function, {|[string]: string|}]|};
HMR_BUNDLE_ID: string;
root: ParcelRequire;
}
interface ParcelModule {
hot: {|
data: mixed,
accept(cb: (Function) => void): void,
dispose(cb: (mixed) => void): void,
// accept(deps: Array<string> | string, cb: (Function) => void): void,
// decline(): void,
_acceptCallbacks: Array<(Function) => void>,
_disposeCallbacks: Array<(mixed) => void>,
|};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
*/
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || (function () {}));
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = undefined;
}
module.bundle.Module = Module;
var checkedAssets, /*: {|[string]: boolean|}*/
acceptedAssets, /*: {|[string]: boolean|}*/
/*: {|[string]: boolean|}*/
assetsToAccept;
function getHostname() {
  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
  return HMR_PORT || location.port;
}
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = getHostname();
  var port = getPort();
  var protocol = HMR_SECURE || location.protocol == 'https:' && !(/localhost|127.0.0.1|0.0.0.0/).test(hostname) ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');
  // $FlowFixMe
  ws.onmessage = function (event) /*: {data: string, ...}*/
  {
    checkedAssets = {
      /*: {|[string]: boolean|}*/
    };
    acceptedAssets = {
      /*: {|[string]: boolean|}*/
    };
    assetsToAccept = [];
    var data = /*: HMRMessage*/
    JSON.parse(event.data);
    if (data.type === 'update') {
      // Remove error overlay if there is one
      removeErrorOverlay();
      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);
      // Handle HMR Update
      var handled = false;
      assets.forEach(asset => {
        var didAccept = asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
        if (didAccept) {
          handled = true;
        }
      });
      if (handled) {
        console.clear();
        assets.forEach(function (asset) {
          hmrApply(module.bundle.root, asset);
        });
        for (var i = 0; i < assetsToAccept.length; i++) {
          var id = assetsToAccept[i][1];
          if (!acceptedAssets[id]) {
            hmrAcceptRun(assetsToAccept[i][0], id);
          }
        }
      } else {
        window.location.reload();
      }
    }
    if (data.type === 'error') {
      // Log parcel errors to console
      for (let ansiDiagnostic of data.diagnostics.ansi) {
        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
        console.error('ðŸš¨ [parcel]: ' + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
      }
      // Render the fancy html overlay
      removeErrorOverlay();
      var overlay = createErrorOverlay(data.diagnostics.html);
      // $FlowFixMe
      document.body.appendChild(overlay);
    }
  };
  ws.onerror = function (e) {
    console.error(e.message);
  };
  ws.onclose = function (e) {
    if (undefined !== 'test') {
      console.warn('[parcel] ðŸš¨ Connection to the HMR server was lost');
    }
  };
}
function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);
  if (overlay) {
    overlay.remove();
    console.log('[parcel] âœ¨ Error resolved');
  }
}
function createErrorOverlay(diagnostics) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID;
  let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
  for (let diagnostic of diagnostics) {
    let stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;
    errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          ðŸš¨ ${diagnostic.message}
        </div>
        <pre>
          ${stack}
        </pre>
        <div>
          ${diagnostic.hints.map(hint => '<div>' + hint + '</div>').join('')}
        </div>
      </div>
    `;
  }
  errorHTML += '</div>';
  overlay.innerHTML = errorHTML;
  return overlay;
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]>*/
{
  var modules = bundle.modules;
  if (!modules) {
    return [];
  }
  var parents = [];
  var k, d, dep;
  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];
      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push([bundle, k]);
      }
    }
  }
  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }
  return parents;
}
function updateLink(link) {
  var newLink = link.cloneNode();
  newLink.onload = function () {
    if (link.parentNode !== null) {
      // $FlowFixMe
      link.parentNode.removeChild(link);
    }
  };
  newLink.setAttribute('href', // $FlowFixMe
  link.getAttribute('href').split('?')[0] + '?' + Date.now());
  // $FlowFixMe
  link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
  if (cssTimeout) {
    return;
  }
  cssTimeout = setTimeout(function () {
    var links = document.querySelectorAll('link[rel="stylesheet"]');
    for (var i = 0; i < links.length; i++) {
      // $FlowFixMe[incompatible-type]
      var href = /*: string*/
      links[i].getAttribute('href');
      var hostname = getHostname();
      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
      var absolute = (/^https?:\/\//i).test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;
      if (!absolute) {
        updateLink(links[i]);
      }
    }
    cssTimeout = null;
  }, 50);
}
function hmrApply(bundle, /*: ParcelRequire*/
asset) /*:  HMRAsset*/
{
  var modules = bundle.modules;
  if (!modules) {
    return;
  }
  if (asset.type === 'css') {
    reloadCSS();
    return;
  }
  let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
  if (deps) {
    var fn = new Function('require', 'module', 'exports', asset.output);
    modules[asset.id] = [fn, deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}
function hmrAcceptCheck(bundle, /*: ParcelRequire*/
id, /*: ParcelRequire*/
/*: string*/
depsByBundle) /*: ?{ [string]: { [string]: string } }*/
{
  var modules = bundle.modules;
  if (!modules) {
    return;
  }
  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
    // If we reached the root bundle without finding where the asset should go,
    // there's nothing to do. Mark as "accepted" so we don't reload the page.
    if (!bundle.parent) {
      return true;
    }
    return hmrAcceptCheck(bundle.parent, id, depsByBundle);
  }
  if (checkedAssets[id]) {
    return;
  }
  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);
  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }
  return getParents(module.bundle.root, id).some(function (v) {
    return hmrAcceptCheck(v[0], v[1], null);
  });
}
function hmrAcceptRun(bundle, /*: ParcelRequire*/
id) /*: string*/
{
  var cached = bundle.cache[id];
  bundle.hotData = {};
  if (cached && cached.hot) {
    cached.hot.data = bundle.hotData;
  }
  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }
  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];
  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      var assetsToAlsoAccept = cb(function () {
        return getParents(module.bundle.root, id);
      });
      if (assetsToAlsoAccept && assetsToAccept.length) {
        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
      }
    });
  }
  acceptedAssets[id] = true;
}

},{}],"3dVh8":[function(require,module,exports) {
//Defer image loads
      const imgOptionsIO = {
        root: null,
        rootMargin: '100px',
        threshold: 0.5,
      };
      const deferImages = (entries, self) => {
        entries.forEach(({ target, isIntersecting }) => {
          if (isIntersecting) {
            target.src = target.dataset.src;
            self.unobserve(target);
          }
        });
      };

      const imgIO = new IntersectionObserver(deferImages, imgOptionsIO);

      const imgs = document.querySelectorAll('.img');
      const review_imgs = document.querySelectorAll('.entry');

      imgs.forEach((img) => imgIO.observe(img));
},{}]},["5PEza","3dVh8"], "3dVh8", "parcelRequirec903")

</script>
    <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/pixi.js/4.5.1/pixi.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.1.3/TweenMax.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/105/three.min.js"></script> -->

    <script src="/index.HASH_REF_d1caae02fe9c6abe7cd8aa35a155a1c1.js"></script>
    <script src="/index.HASH_REF_f8346c5d2ddfc86970e3f4dc019173ff.js"></script>
    <script src="/index.HASH_REF_3f4d21565401daa728e54b92e9dcb64e.js"></script>
  </body>
</html>
